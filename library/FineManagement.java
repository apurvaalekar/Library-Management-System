/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apurva
 */
public class FineManagement extends javax.swing.JFrame {

    /**
     * Creates new form FineManagement
     */
    public FineManagement() {
        initComponents();
        setlookandfeel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Enter Borrower ID:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Check Fine");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Check Over Due books");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loan_id", "ISBN", "book_title", "Card_id", "date_out", "due_datel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.setVisible(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loan_id", "Loan amount", "Paid"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jScrollPane2.setVisible(false);

        jButton4.setText("Pay fine");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Loan_id:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(108, 108, 108)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(69, 69, 69)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton4)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jButton4.setVisible(false);
        jLabel2.setVisible(false);
        jTextField2.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
          DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        int rows=model.getRowCount();
        while (model.getRowCount()>0)
        {
             model.removeRow(0);
        }
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        
       // int rows1=model.getRowCount();
        while (model2.getRowCount()>0){
            model2.removeRow(0);
        }
        
        
 
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jScrollPane1.setVisible(true);
        if(jTextField1.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Enter borrower id","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        else{
        
        int borrowerId=Integer.parseInt(jTextField1.getText());
        
        Connection conn=null;
        try {
            conn= ConnUtil.getConnection();
            Statement stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery("select bl.Loan_id,bl.card_id,bl.isbn,b.title,bl.Date_out,bl.Due_date from book b, book_loans bl where bl.isbn=b.isbn and  (bl.card_id="+borrowerId+")and bl.Date_in is null;");
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            if(rs.next()==false){
             JOptionPane.showMessageDialog(this,"Enter valid borrower id. No record found for borrower id:"+borrowerId,"Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                
            rs.previous();
                    
            while(rs.next())
                    {
                        
                    int loanid=rs.getInt("bl.Loan_id");
                    //System.out.println("loan"+loanid);
                    String bookISBN=rs.getString("bl.isbn");
                    int cardid=rs.getInt("bl.card_id");
                    Date due_date=rs.getDate("bl.Due_date");
                    String book_title = rs.getString("b.title");
                    Date date_out = rs.getDate("bl.Date_out");
                 
                    model1.addRow(new Object[]{loanid,bookISBN,book_title,cardid,date_out,due_date});
                    
                    }
            rs.close();
            stmt.close();
        
            }
        } catch (SQLException ex) {
            Logger.getLogger(FineManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
        ConnUtil.closeConnection(conn);
        }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        jScrollPane2.setVisible(true);
        jTextField2.setVisible(true);
        jLabel2.setVisible(true);
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Enter borrower id","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            int borrowerId=Integer.parseInt(jTextField1.getText());
        
            Connection conn=null;
            try {
                conn= ConnUtil.getConnection();
                Statement stmt=conn.createStatement();
                ResultSet rs=stmt.executeQuery("select * from fines f,book_loans b where f.Loan_id=b.Loan_id and b.card_id="+borrowerId+";");
                DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
                if(rs.next()==false){
                    JOptionPane.showMessageDialog(this,"Enter valid borrower id. No record found for borrower id:"+borrowerId,"Error",JOptionPane.ERROR_MESSAGE);
                }
                else{
                     DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
                    rs.previous();
                    while(rs.next()){
                    int loan=rs.getInt("Loan_id");
                    float amount=rs.getFloat("fine_amt");
                    int paid=rs.getInt("paid");
                    String paid_status;
                    if (paid==0)
                        paid_status="false";
                    else
                        paid_status="true";
                    
                     model2.addRow(new Object[]{loan,amount,paid_status});
                    
                    }
                       jButton4.setVisible(true);
            
            
        }
        }catch (SQLException se){
            
          Logger.getLogger(FineManagement.class.getName()).log(Level.SEVERE, null, se);   
        }
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        if(jTextField2.getText()==""){
            JOptionPane.showMessageDialog(this,"Please enter valid loan_id","Error",JOptionPane.ERROR_MESSAGE);
        }else{
        int value=Integer.parseInt(jTextField2.getText());
                Connection conn=null;
            
        try {
            conn=ConnUtil.getConnection();
            Statement stmt=conn.createStatement();
            stmt.executeUpdate("update fines set paid=1 where loan_id="+value);
            JOptionPane.showMessageDialog(this, "Fine Paid", "General", JOptionPane.PLAIN_MESSAGE);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(FineManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_jButton4ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FineManagement().setVisible(true);
            }
        });
        
    }

 private void setlookandfeel(){
     try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FineManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
     
 }   
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
