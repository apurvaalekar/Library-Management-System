/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apurva
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
  
    public HomePage() {
        initComponents();
      
            
      
    }
/**
     * This method initializes the database connection 
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HomePage hp=new HomePage();
                hp.setVisible(true);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        searchtext = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Borrower = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        reset = new javax.swing.JButton();
        checkout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 266, 1, -1));

        searchtext.setToolTipText("Enter ISBN,Author name or book name");
        searchtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtextActionPerformed(evt);
            }
        });
        getContentPane().add(searchtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 73, 244, 31));

        jLabel1.setText("Search Books");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 29, 391, 26));

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 122, 87, 32));

        jLabel2.setText("Other administrative Tasks");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 266, -1, -1));

        jButton2.setText("Check in");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 329, -1, -1));

        jButton3.setText("Calculate Fine");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 329, -1, -1));

        Borrower.setText("Add Borrower");
        Borrower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrowerActionPerformed(evt);
            }
        });
        getContentPane().add(Borrower, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 329, -1, -1));

        jLabel3.setText("Welocme to Online Library Portal");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 186, 38));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Book_Title", "Authors", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setToolTipText("Available books");
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.setVisible(false);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 160, 341, 70));

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 122, 81, 32));

        checkout.setText("Checkout");
        checkout.setToolTipText("Checkout boks");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });
        getContentPane().add(checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 236, -1, -1));
        checkout.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtextActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        
       // TODO add your handling code here:
      
       jScrollPane1.setVisible(true);
       
       String search=searchtext.getText();
       
       if(search.equals("")){
           JOptionPane.showMessageDialog(this,"This book is not availlable! Please select another book.","Error",JOptionPane.ERROR_MESSAGE);
       }
       else{
            String searchquery;
      
            jScrollPane1.setVisible(true);
            jTable1.setVisible(true);
       //System.out.println("In print"+search);
            searchquery=("select distinct b.isbn,b.title,b.Available_count from book b,book_authors ba,authors a where ((b.isbn=ba.isbn) and (ba.Author_id=a.Author_id) and (b.title LIKE '%"+search+"%' OR a.name LIKE '%"+search+"%' OR b.isbn LIKE '%"+search+"%'));");
       //System.out.println(searchquery);
            Connection conn = null; 
            Statement stmt;
            try {
            /*jTable1.setVisible(true);
            jScrollPane1.setVisible(true);*/
            
                conn=ConnUtil.getConnection();
                stmt=conn.createStatement();
                stmt.execute("use library");
            
                int flag=0;
                ResultSet rs = stmt.executeQuery(searchquery);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                while (rs.next()){
                
                    String isbn= rs.getString("b.isbn");
                    String Book_title=rs.getString("b.title");
                    String author_builder="";
                    int Availability = rs.getInt("b.Available_count");
                    //   System.out.println(isbn+"\t"+Book_title+"\t"+Authors+"\t"+Availability);
                      
                    Statement stmt1=conn.createStatement();
                    ResultSet rs1=stmt1.executeQuery("select a.Name from authors a, book b, book_authors ba where b.isbn=ba.isbn and ba.Author_id=a.Author_id and b.isbn="+isbn+";");
                        while(rs1.next())        
                    {
                        author_builder=author_builder+rs1.getString("a.name")+",";
                        
                    }
                    author_builder=author_builder.substring(0, author_builder.length()-1);
                    
                    model.addRow(new Object[]{isbn,Book_title,author_builder,Availability});
                
                    flag=1;
                }
          
                if (flag==1){
                    checkout.setVisible(true);
                
                }
            
                stmt.close();
            
            } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
        
        ConnUtil.closeConnection(conn);
        }
    }
       
    }//GEN-LAST:event_SearchActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        searchtext.setText("");
        int rows=model.getRowCount();
        while (model.getRowCount()>0)
        model.removeRow(0);
    }//GEN-LAST:event_resetActionPerformed

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        // TODO add your handling code here:
        
        int column = 0;
                int row = jTable1.getSelectedRow();
                //*****************Error handling if no row selected*****
                String value = jTable1.getModel().getValueAt(row, column).toString();
                Connection conn=null;
        try {
            conn=ConnUtil.getConnection();
            Statement stmt=conn.createStatement();
            
            ResultSet rs2=stmt.executeQuery("select available_count from book where isbn="+value+";");
            while(rs2.next()){
                
                int avail=rs2.getInt("available_count");
                if(avail==0){
                    JOptionPane.showMessageDialog(this,"This book is not availlable! Please select another book.","Error",JOptionPane.ERROR_MESSAGE);
                    
                   // new Checkout(value).setVisible(false);
                }
                else{
                     java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                    new Checkout(value).setVisible(true);
                    }
                    });
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
        
        ConnUtil.closeConnection(conn);
        }
                
    
    }//GEN-LAST:event_checkoutActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FineManagement().setVisible(true);
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void BorrowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrowerActionPerformed
        // TODO add your handling code here:
        
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBorrower().setVisible(true);
            }
        });
    }//GEN-LAST:event_BorrowerActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckIn().setVisible(true);
            }
        });
        
    }//GEN-LAST:event_jButton2ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrower;
    private javax.swing.JButton Search;
    private javax.swing.JButton checkout;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField searchtext;
    // End of variables declaration//GEN-END:variables

    
}
